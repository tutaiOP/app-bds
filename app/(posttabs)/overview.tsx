import Balance from "@/components/Modal/Balance";
import CustomDrawerModal from "@/components/Modal/CustomDrawerModal";
import {
  Entypo,
  Feather,
  FontAwesome5,
  Ionicons,
  MaterialCommunityIcons,
} from "@expo/vector-icons";
import clsx from "clsx";
import React, { useState } from "react";
import {
  FlatList,
  Image,
  LayoutAnimation,
  Platform,
  ScrollView,
  Text,
  TouchableOpacity,
  UIManager,
  View,
} from "react-native";

if (
  Platform.OS === "android" &&
  UIManager.setLayoutAnimationEnabledExperimental
) {
  UIManager.setLayoutAnimationEnabledExperimental(true);
}
const tabs = [
  {
    label: "Quan tr·ªçng",
    value: "important",
    icon: "fire",
    color: "text-red-500",
    badge: 0,
  },
  {
    label: "Th√¥ng tin",
    value: "info",
    icon: "file-text",
    color: "text-green-500",
    badge: 0,
  },
  {
    label: "G·ª£i √Ω",
    value: "suggest",
    icon: "heart",
    color: "text-teal-500",
    badge: 2,
  },
  {
    label: "ƒê√£ t·∫°m ·∫©n",
    value: "hidden",
    icon: "eye-off",
    color: "text-gray-500",
    badge: 0,
  },
];

const options = [
  { label: "M·∫∑c ƒë·ªãnh", value: "default" },
  { label: "Tin t·ª©c th·ª±c t·∫ø x·∫øp tr∆∞·ªõc", value: "news_first" },
  { label: "Gi√° th·∫•p ƒë·∫øn cao", value: "low_to_high" },
  { label: "Gi√° cao ƒë·∫øn th·∫•p", value: "hight_to_low" },
  { label: "Gi√°/m¬≤ th·∫•p ƒë·∫øn cao", value: "m2low_to_high" },
  { label: "Gi√°/m¬≤ cao ƒë·∫øn th·∫•p", value: "m2high_to_l∆°" },
  { label: "Di·ªán t√≠ch nh·ªè ƒë·∫øn l·ªõn", value: "small_to_large" },
  { label: "Di·ªán t√≠ch l·ªõn ƒë·∫øn nh·ªè", value: "large_to_small" },
];

const Overview = () => {
  const [activeTab, setActiveTab] = useState("important");
  const [modalVisible, setModalVisible] = useState(false);
  const [drawerVisible, setDrawerVisible] = useState(false);

  const handleChangeTab = (value: string) => {
    LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);
    setActiveTab(value);
  };

  const renderTabContent = () => {
    switch (activeTab) {
      case "important":
        return (
          <View className="bg-gray-100 rounded-xl mt-4 p-4">
            <View className="flex-row justify-between items-center mb-2">
              <Text className="text-red-500 font-bold">üî• Quan tr·ªçng</Text>
              <View className="bg-red-500 rounded-full w-6 h-6 items-center justify-center">
                <Text className="text-white text-xs font-semibold">0</Text>
              </View>
            </View>
            <View className="bg-white rounded-lg p-3">
              <Text className="text-sm">
                B·∫°n ƒë√£ c·∫≠p nh·∫≠t t·∫•t c·∫£ th√¥ng tin c·ªßa ng√†y h√¥m nay üëè
              </Text>
            </View>
          </View>
        );
      case "info":
        return (
          <View className="bg-gray-100 rounded-xl mt-4 p-4">
            <Text className="text-green-600 font-bold mb-2">üìÑ Th√¥ng tin</Text>
            <View className="bg-white rounded-lg p-3">
              <Text className="text-sm">
                B·∫°n ƒë√£ c·∫≠p nh·∫≠t t·∫•t c·∫£ th√¥ng tin c·ªßa ng√†y h√¥m nay üëè
              </Text>
            </View>
          </View>
        );
      case "suggest":
        return (
          <View className="bg-gray-100 rounded-xl mt-4 p-4">
            <View className="flex-row justify-between items-center mb-4">
              <Text className="text-teal-600 font-bold ">üí° G·ª£i √Ω</Text>
              <View className="bg-red-500 rounded-full w-6 h-6 items-center justify-center">
                <Text className="text-white text-xs font-semibold">0</Text>
              </View>
            </View>
            <View className="bg-white rounded-lg p-4 ">
              <Text className="text-teal-600 font-bold mb-2">üí° G·ª£i √Ω</Text>

              <Text className="font-bold text-xl">
                L√†m quen v·ªõi trang T·ªïng quan!
              </Text>
              <Text className="text-sm text-gray-700 mt-2 mb-4">
                H∆∞·ªõng d·∫´n b·∫°n l√†m quen v√† thao t√°c v·ªõi m·ªôt s·ªë n·ªôi dung ch√≠nh,
                gi√∫p b·∫°n c√≥ tr·∫£i nghi·ªám t·ªët h∆°n.
              </Text>
              <View className="border-t border-gray-200 pt-4">
                <View className="flex-row  gap-2 items-center mb-4 ">
                  <FontAwesome5 name="user-circle" size={24} color="black" />
                  <Text className="font-bold flex-1 ">
                    Th√¥ng tin t·ªïng quan v·ªÅ t√†i kho·∫£n c·ªßa b·∫°n
                  </Text>
                </View>
                <View className="flex-row  gap-2 items-center mb-4 ">
                  <FontAwesome5 name="user-circle" size={24} color="black" />
                  <Text className="font-bold flex-1 ">
                    Th√¥ng tin c√° nh√¢n h√≥a d√†nh ri√™ng cho b·∫°n
                  </Text>
                </View>
                <View className="flex-row  gap-2 items-center mb-4 ">
                  <Feather name="eye-off" size={24} color="black" />
                  <Text className="font-bold flex-1 ">
                    ·∫®n nh·ªØng th√¥ng tin m√† b·∫°n th·∫•y kh√¥ng h·ªØu √≠ch
                  </Text>
                </View>
              </View>
              <TouchableOpacity className="mt-2 rounded-full border border-black p-2 items-center">
                <Text className="font-semibold">Xem h∆∞·ªõng d·∫´n</Text>
              </TouchableOpacity>
            </View>

            {/* Lam quen voi diaocphongthuy */}
            <View className="bg-white rounded-lg p-4 mt-2 ">
              <Text className="text-teal-600 font-bold mb-2">üí° G·ª£i √Ω</Text>

              <Text className="font-bold text-lg mb-4">
                L√†m quen v·ªõi Diaocphongthuy.com
              </Text>
              <View className="border-t border-gray-200 pt-4">
                <TouchableOpacity className="flex-row gap-4 justify-between items-center mb-4">
                  <View className="flex-row gap-3 items-center flex-shrink">
                    <Entypo name="image" size={24} color="black" />
                    <View className="flex-shrink">
                      <Text className="font-bold flex-shrink text-sm">
                        C·∫≠p nh·∫≠t t√™n v√† h√¨nh ·∫£nh ƒë·∫°i di·ªán
                      </Text>
                      <Text className="text-sm">
                        T√™n v√† h√¨nh ·∫£nh s·∫Ω xu·∫•t hi·ªán ·ªü t·∫•t c·∫£ c√°c tin ƒëƒÉng c·ªßa
                        b·∫°n, ƒëi·ªÅu ƒë√≥ s·∫Ω gi√∫p b·∫°n c·∫≠n ng∆∞·ªùi mua d·ªÖ d√†ng h∆°n.
                      </Text>
                    </View>
                  </View>
                  <Entypo name="chevron-small-right" size={24} color="black" />
                </TouchableOpacity>
                <TouchableOpacity className="flex-row gap-4 justify-between items-center mb-4">
                  <View className="flex-row gap-3 items-center flex-shrink">
                    <MaterialCommunityIcons
                      name="notebook"
                      size={24}
                      color="black"
                    />
                    <View className="flex-shrink">
                      <Text className="font-bold flex-shrink text-sm">
                        Kh√°m pha s·ªï tay ƒëƒÉng tin
                      </Text>
                    </View>
                  </View>
                  <Entypo name="chevron-small-right" size={24} color="black" />
                </TouchableOpacity>
                <TouchableOpacity className="flex-row gap-4 justify-between items-center mb-4">
                  <View className="flex-row gap-3 items-center flex-shrink">
                    <Ionicons
                      name="add-circle-outline"
                      size={24}
                      color="black"
                    />
                    <View className="flex-shrink">
                      <Text className="font-bold flex-shrink text-sm">
                        V√† b·∫°n ƒë√£ s·∫µn s√†ng ƒë·ªÉ ƒëƒÉng tin ƒë·∫ßu ti√™n. B·∫Øt ƒë·∫ßu ngay!
                      </Text>
                      <Text className="text-sm">
                        Diaocphongthuy.com t·∫∑ng b·∫°n m·ªôt tin th∆∞·ªùng 15 ng√†y ƒë·ªÉ
                        b·∫Øt ƒë·∫ßu ƒëƒÉng tin.
                      </Text>
                    </View>
                  </View>
                  <Entypo name="chevron-small-right" size={24} color="black" />
                </TouchableOpacity>
              </View>
            </View>
          </View>
        );
      case "hidden":
        return (
          <View className="bg-gray-100 rounded-xl mt-4 p-4">
            <Text className="text-gray-600 font-bold mb-2">üôà ƒê√£ t·∫°m ·∫©n</Text>
            <View className="bg-white rounded-lg p-3">
              <Text className="text-sm text-gray-400">
                Kh√¥ng c√≥ n·ªôi dung n√†o.
              </Text>
            </View>
          </View>
        );
    }
  };

  type Tab = {
    label: string;
    value: string;
    icon: string;
    color: string;
    badge: number;
  };

  const renderTabItem = ({ item }: { item: Tab }) => (
    <TouchableOpacity
      onPress={() => handleChangeTab(item.value)}
      className={clsx(
        "flex-row items-center px-4 py-2 rounded-full border mr-3",
        activeTab === item.value
          ? "bg-black border-black"
          : "bg-white border-gray-300"
      )}
    >
      <Text
        className={clsx(
          "text-sm font-medium",
          activeTab === item.value ? "text-white" : "text-black"
        )}
      >
        {item.label}
      </Text>
    </TouchableOpacity>
  );
  return (
    <View className="flex-1 bg-white">
      {/* Ph·∫ßn header m√†u ƒë·ªè */}
      <View className="bg-red-500">
        <View className="px-4 pb-4 pt-16">
          {/* Header */}
          <TouchableOpacity
            onPress={() => setDrawerVisible(true)}
            className="mb-6 flex-row gap-3 items-center "
          >
            <Image
              className="rounded-full"
              source={require("../../assets/images/AI.jpg")}
              style={{ width: 56, height: 56 }}
            />
            <View>
              <Text className="text-black">Xin ch√†o</Text>
              <Text className="text-lg text-black font-bold">
                H·ªì T√∫ T√†i {">"}
              </Text>
            </View>
          </TouchableOpacity>
          <CustomDrawerModal
            visible={drawerVisible}
            onClose={() => setDrawerVisible(false)}
          />

          {/* V√≠ ti·ªÅn */}
          <TouchableOpacity
            onPress={() => setModalVisible(true)}
            className="bg-white p-2 rounded-full mb-6"
          >
            <View className="flex-row justify-between items-center bg-gray-200 p-2 rounded-full">
              <View className="flex-row gap-2 items-center">
                <Image
                  className="rounded-full"
                  source={require("../../assets/images/AI.jpg")}
                  style={{ width: 28, height: 28 }}
                />
                <Text>0 ƒë</Text>
              </View>
              <Feather name="chevron-down" size={20} color="black" />
            </View>
          </TouchableOpacity>
        </View>
      </View>

      {/* N·ªôi dung ch√≠nh */}
      <ScrollView
        className="flex-1 bg-white"
        contentContainerStyle={{
          paddingHorizontal: 16,
          paddingBottom: 16,
        }}
        showsVerticalScrollIndicator={false}
      >
        <View className="pt-4">
          <Text className="text-xl font-bold">T·ªïng quan t√†i kho·∫£n</Text>

          <View className="flex-row gap-4 mt-5">
            {/* Tin ƒëƒÉng */}
            <View className="flex-1 bg-gray-200 rounded-lg px-4 py-2">
              <View className="flex-row items-center gap-2 mb-2">
                <Ionicons name="book-sharp" size={24} color="black" />
                <Text className="font-bold">Tin ƒëƒÉng</Text>
              </View>
              <Text className="text-lg font-bold">0 tin</Text>
              <Text className="text-sm">ƒêang hi·ªÉn th·ªã</Text>
              <View className="flex-row gap-2 mt-4">
                <Text className="font-bold underline text-red-500">
                  ƒêƒÉng tin
                </Text>
                <Text className="text-red-500">{">"}</Text>
              </View>
            </View>

            {/* Li√™n h·ªá */}
            <View className="flex-1 bg-gray-200 rounded-lg px-4 py-2">
              <View className="flex-row items-center gap-2 mb-2 flex-wrap">
                <Ionicons name="people-sharp" size={24} color="black" />
                <Text className="font-bold text-sm flex-shrink">
                  Li√™n h·ªá trong 30 ng√†y
                </Text>
              </View>
              <Text className="text-lg font-bold">0 ng∆∞·ªùi</Text>
              <Text className="text-sm text-green-500">
                + 0 m·ªõi v√†o h√¥m nay
              </Text>
            </View>
          </View>

          {/* Tabs */}
          <Text className="mt-6 text-xl font-bold">
            Th√¥ng tin d√†nh ri√™ng cho b·∫°n
          </Text>

          <FlatList
            data={tabs}
            keyExtractor={(item) => item.value}
            horizontal
            showsHorizontalScrollIndicator={false}
            contentContainerStyle={{ paddingVertical: 12, paddingRight: 16 }}
            renderItem={renderTabItem}
          />

          {/* N·ªôi dung tab */}
          <View>{renderTabContent()}</View>
        </View>
      </ScrollView>

      {/* Hi·ªÉn th·ªã Modal */}
      <Balance
        modalVisible={modalVisible}
        setModalVisible={setModalVisible}
        balances={[
          { label: "TK tin ƒëƒÉng", value: 0 },
          { label: "TK khuy·∫øn m√£i", value: 0 },
        ]}
      />
    </View>
  );
};

export default Overview;
